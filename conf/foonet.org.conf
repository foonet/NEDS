server {
	listen 80;
	server_name foonet.org www.foonet.org ssl.foonet.org foonet.ro www.foonet.ro zmeu.foonet.ro;

	location / {
		rewrite ^(.*) https://foonet.org$1 permanent;
	}
}


# https SSL vhost
server {
	listen 443 ssl;
	server_name foonet.org www.foonet.org ssl.foonet.org;

	ssl_certificate /etc/nginx/domains/foonet.org/ssl/foonet.org.pem;
	ssl_certificate_key /etc/nginx/domains/foonet.org/ssl/foonet.org.key;
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	#ssl_session_cache shared:SSL:40m;
	#ssl_session_timeout 10m;
	#ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:EECDH+aRSA+SHA384:EECDH+aRSA+SHA256:EECDH+aRSA+RC4:EECDH:EDH+aRSA:RC4:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!SRP:!kEDH:!DSS:!CAMELLIA:!EXPORT:!SEED:!RC4;
	#ssl_prefer_server_ciphers on;

	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
	add_header Alternate-Protocol 443:npn-spdy/3;

	#spdy_headers_comp 5;
	#ssl_buffer_size 4000;
	#ssl_session_tickets on;

# enable ocsp stapling
	resolver 8.8.8.8 8.8.4.4 valid=10m;
	resolver_timeout 10s;

	#ssl_stapling on;
	#ssl_stapling_verify on;
	#ssl_trusted_certificate /etc/nginx/domains/foonet.org/ssl/foonet.org.pem;

	access_log /etc/nginx/domains/foonet.org/log/access.log;
	error_log /etc/nginx/domains/foonet.org/log/error.log;

	root /etc/nginx/domains/foonet.org/public;

	location / {
		#try_files $uri $uri/ /index.php?q=$request_uri;
		try_files $uri $uri/ /;
	}

	location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso)$ {
		gzip_static off;
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
	}

	location ~* \.(js)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
	}

	location ~* \.(css)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
	}

	location ~* \.(html|htm|txt)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 1d;
		break;
	}

	location ~* \.(eot|svg|ttf|woff|woff2)$ {
		#add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
	}

	error_page 403 /403.html;
	error_page 404 /404.html;
	error_page 500 /500.html;
	error_page 502 /502.html;
	error_page 503 /503.html;
	error_page 504 /504.html;

	location = /403.html {
		access_log off;
		internal;
	}

	location = /404.html {
                access_log              off;
                internal;
        }

	location = /500.html {
                allow                   all;
                access_log              off;
                internal;
        }

	location = /502.html {
                allow                   all;
                access_log              off;
                internal;
        }

	location = /503.html {
                allow                   all;
                access_log              off;
                internal;
        }

	location = /504.html {
                allow                   all;
                access_log              off;
                internal;
        }

	location = /50x.html {
                allow                   all;
                access_log              off;
                internal;
        }

	location = /robots.txt  { access_log off; log_not_found off; }
	location = /favicon.ico { access_log off; log_not_found off; expires 30d; }	
	location ~ /\.          { access_log off; log_not_found off; deny all; }
	location ~ ~$           { access_log off; log_not_found off; deny all; }
	location ~ /\.git { access_log off; log_not_found off; deny all; }
	location ~* \.(bak|php~|php#|php.save|php.swp|php.swo)$ { return 444; }

    ## Block SQL injections
    set $block_sql_injections 0;
    if ($query_string ~ "union.*select.*\(") {
        set $block_sql_injections 1;
    }
    if ($query_string ~ "union.*all.*select.*") {
        set $block_sql_injections 1;
    }
    if ($query_string ~ "concat.*\(") {
        set $block_sql_injections 1;
    }
    if ($block_sql_injections = 1) {
        return 403;
    }

    ## Block file injections
    set $block_file_injections 0;
    if ($query_string ~ "[a-zA-Z0-9_]=http://") {
        set $block_file_injections 1;
    }
    if ($query_string ~ "[a-zA-Z0-9_]=(\.\.//?)+") {
        set $block_file_injections 1;
    }
    if ($query_string ~ "[a-zA-Z0-9_]=/([a-z0-9_.]//?)+") {
        set $block_file_injections 1;
    }
    if ($block_file_injections = 1) {
        return 403;
    }

    ## Block common exploits
    set $block_common_exploits 0;
    if ($query_string ~ "(<|%3C).*script.*(>|%3E)") {
        set $block_common_exploits 1;
    }
    if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})") {
        set $block_common_exploits 1;
    }
    if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})") {
        set $block_common_exploits 1;
    }
    if ($query_string ~ "proc/self/environ") {
        set $block_common_exploits 1;
    }
    if ($query_string ~ "mosConfig_[a-zA-Z_]{1,21}(=|\%3D)") {
        set $block_common_exploits 1;
    }
    if ($query_string ~ "base64_(en|de)code\(.*\)") {
        set $block_common_exploits 1;
    }
    if ($block_common_exploits = 1) {
        return 403;
    }

    ## Block spam
    set $block_spam 0;
    if ($query_string ~ "\b(ultram|unicauca|valium|viagra|vicodin|xanax|ypxaieo)\b") {
        set $block_spam 1;
    }
    if ($query_string ~ "\b(erections|hoodia|huronriveracres|impotence|levitra|libido)\b") {
        set $block_spam 1;
    }
    if ($query_string ~ "\b(ambien|blue\spill|cialis|cocaine|ejaculation|erectile)\b") {
        set $block_spam 1;
    }
    if ($query_string ~ "\b(lipitor|phentermin|pro[sz]ac|sandyauer|tramadol|troyhamby)\b") {
        set $block_spam 1;
    }
    if ($block_spam = 1) {
        return 403;
    }

    ## Block user agents
    set $block_user_agents 0;

    # Don't disable wget if you need it to run cron jobs!
    #if ($http_user_agent ~ "Wget") {
    #    set $block_user_agents 1;
    #}

    # Disable Akeeba Remote Control 2.5 and earlier
    if ($http_user_agent ~ "Indy Library") {
        set $block_user_agents 1;
    }

    # Common bandwidth hoggers and hacking tools.
    if ($http_user_agent ~ "libwww-perl") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "GetRight") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "GetWeb!") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "Go!Zilla") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "Download Demon") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "Go-Ahead-Got-It") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "TurnitinBot") {
        set $block_user_agents 1;
    }
    if ($http_user_agent ~ "GrabNet") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "dirbuster") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "nikto") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "SF") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "sqlmap") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "fimap") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "nessus") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "whatweb") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "Openvas") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "jbrofuzz") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "libwhisker") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "webshag") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "Acunetix-Product") {
        set $block_user_agents 1;
    }

    if ($http_user_agent ~ "Acunetix") {
        set $block_user_agents 1;
    }

    if ($block_user_agents = 1) {
        return 403;
    }

}
